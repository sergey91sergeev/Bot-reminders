import asyncio
from datetime import datetime
from aiogram import Bot, Dispatcher, types
from aiogram import executor
from config import API_TOKEN
from func import get_time_from_string
from func import get_text_from_string
from db import insert_into_table_user
from db import insert_into_table_remind
"""example_bot"""

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=["start"])
async def start(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Çüëã \n"
                        "–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è üìÖ , "
                        "–ø–ª–∞–Ω–∏—Ä—É–π—Ç–µ –¥–µ–ª–∞ üìù –∏ –ø–æ–ª—É—á–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ üîî –ø—Ä—è–º–æ –≤ Telegram.\n"
                        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Ç–µ–∫—Å—Ç–∞ üßæ –∏ –≤—Ä–µ–º–µ–Ω–∏ ‚è∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è!")

    user_id = message.from_user.id
    user_name = message.from_user.first_name
    user_surname = message.from_user.last_name
    username = message.from_user.username
    date_time = datetime.today()

    insert_into_table_user(user_id, user_name, user_surname, username, date_time)


@dp.message_handler()
async def remind(message: types.Message):
    try:
        time_user = get_time_from_string(message.text)
        date_time_user_remind = datetime.combine(datetime.now(), time_user)
        user_sms = get_text_from_string(message.text)
        now = datetime.now()
        timedelta_1 = (date_time_user_remind - now).total_seconds()

        if date_time_user_remind > now:
            await message.reply(f"–•–æ—Ä–æ—à–æ! —è –Ω–∞–ø–æ–º–Ω—é: {user_sms} ‚è≥")
            await asyncio.sleep(timedelta_1)
            await message.reply(f"üìå –í—ã –ø—Ä–æ—Å–∏–ª–∏ –Ω–∞–ø–æ–º–Ω–∏—Ç—å: {user_sms}")
        else:
            await message.reply(f"‚ùóÔ∏è–£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è –¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ—Å–ª–µ "
                                f"{now.time().replace(microsecond=0)} –∏ –¥–æ {"24:00:00"}")

        user_id = message.from_user.id
        text_remind = message.text
        date_time = datetime.today()
        insert_into_table_remind(user_id, text_remind, date_time)

    except ValueError:
        await message.reply(f"‚ùóÔ∏è–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –≤—Ä–µ–º—è –¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è‚ùó\n"
                            f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Ç–µ–∫—Å—Ç–∞ üßæ –∏ –≤—Ä–µ–º–µ–Ω–∏ ‚è∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è!")
    except TypeError:
        await message.reply(f"‚ùóÔ∏è–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –≤—Ä–µ–º—è –¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è‚ùó\n"
                            f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Ç–µ–∫—Å—Ç–∞ üßæ –∏ –≤—Ä–µ–º–µ–Ω–∏ ‚è∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è!")

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)